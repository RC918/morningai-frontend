name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_COMMIT_SHA: ${{ github.sha }}
          NEXT_PUBLIC_BUILD_ID: ${{ github.sha }}

      - name: Generate version info
        run: npm run postbuild

  i18n-lint:
    name: i18n Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run i18n lint
        run: npm run i18n:lint || echo "i18n:lint script not found, skipping"

  i18n-sync-check:
    name: i18n Sync Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check i18n sync
        run: npm run i18n:sync-check || echo "i18n:sync-check script not found, skipping"

  playwright-e2e:
    name: Playwright E2E
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_COMMIT_SHA: ${{ github.sha }}
          NEXT_PUBLIC_BUILD_ID: ${{ github.sha }}

      - name: Run Playwright tests
        run: npx playwright test --reporter=list,html --retries=2
        env:
          PLAYWRIGHT_BASE_URL: https://app.morningai.me

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: |
            evidence/playwright/
            test-results/
          retention-days: 30

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-artifacts
          path: |
            test-results/
            playwright-report/

  jest-unit:
    name: Jest Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test -- --coverage

      - name: Upload Jest Coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: jest-coverage
          path: coverage/
          retention-days: 30

  test:
    name: All Tests
    runs-on: ubuntu-latest
    needs: [build, i18n-lint, i18n-sync-check, playwright-e2e, jest-unit]
    steps:
      - name: All tests passed
        run: echo "All CI checks passed successfully!"

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build for production
      run: npm run build
      env:
        NEXT_PUBLIC_COMMIT_SHA: ${{ github.sha }}
        NEXT_PUBLIC_BUILD_ID: ${{ github.sha }}

